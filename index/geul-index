#!/usr/bin/env bash
# geul-index -- maintain an index of articles
#
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-09-04
set -eu
. "$GEUL.sh"
. "$GEUL.running-inside-a-repo"

IDX="$GEUL_DIR/index"
run-sql-on-list-db() {
    [ -e "$IDX/list.db" ] || geul-index init
    sqlite3 "$IDX/list.db" "$@"
}

Command=$1; shift
case "$Command" in
    init)
    mkdir -p "$IDX"
    sqlite3 "$IDX/list.db" "
        CREATE TABLE Articles (
            id      VARCHAR(256) PRIMARY KEY            ,
            title   VARCHAR(512)                        ,
            date    DATETIME
        )
    "
    ;;

    sync)
        cd "$GEUL_ROOT"
        tmp=`mktemp -d /tmp/geul-index.XXXXXX`
        trap "rm -rf $tmp" EXIT
        geul-index ls | sort >$tmp/index-items
        # add updated items
        geul-ls |
        xargs dnif -newer "$IDX"/update.timestamp -- |
        xargs -L1 geul-index update
        # clean stale items
        geul-ls -i | sort | diff $tmp/index-items - |
        sed -n '/^< / { s/^< //; /^$/d; p }' >$tmp/stale-items
        ! [ -s $tmp/stale-items ] || xargs <$tmp/stale-items  geul-index rm
        ;;

    update)
    Path=$1; shift
    metadata=`mktemp /tmp/geul-index.meta.XXXXXX`
    trap "rm -rf $metadata" EXIT
    # add/update list
    eval "`parse-meta id title created <$metadata`"
    id=${id//\'/\'\'}
    title=${title//\'/\'\'}
    created=${created//\'/\'\'}
    run-sql-on-list-db "
        DELETE FROM Articles
        WHERE id='$id'
        ;
        INSERT INTO Articles
        VALUES ('$id', '$title', '$created')
    "
    # update metadata
    {
        echo "^$id " # XXX watch out for the trailing space!
        echo - # clear all metadata
        cat $metadata # feed metadata
        echo -n "Summary:"; text2summary "$Path" | sed 's/^/ /' # and summary
    } | map "$IDX/meta.db" >/dev/null
    # update link index
    #  TODO remove more absolute URLs
    {
        echo '<body>'
        tl <"$Path" | Markdown.pl
        echo '</body>'
    } |
    xslt "$GEUL_DATADIR/index/extract-links.xsl" "-" 2>/dev/null |
    sed '\#^\([^:]*://\|\(mailto\|news\):\)# d' |
    links "$IDX/links.db" update "$id" >/dev/null
    # update timestamp
    touch "$IDX"/update.timestamp
    ;;

    rm)
    filter=
    for Id; do
        Id=${Id//\'/\'\'}
        filter="${filter:+$filter OR }id='$Id'"
    done
    if [ -n "$filter" ]; then
        run-sql-on-list-db "
            DELETE FROM Articles
            WHERE $filter
        "
    fi
    # TODO remove from metadata
    # TODO remove from link index
    ;;

    ls)
    filter=
    for Patt; do
        Patt=${Patt//\?/_}
        Patt=${Patt//\*/%}
        Patt=${Patt//\'/\'\'}
        filter="${filter:+$filter OR }id LIKE '$Patt'"
    done
    run-sql-on-list-db "
        SELECT id FROM Articles
        ${filter:+WHERE $filter}
        ORDER BY Articles.date DESC
    "
    ;;

    links)
    exec links "$IDX/links.db" "$@"
    ;;

    filter)
    exec filter-meta "$@"
    ;;

    meta)
    # TODO Maybe sed is more suited for this task?
    while IFS= read -r id; do
        echo "^$id " # XXX watch out for the trailing space!
        for name; do echo "$name"; done
        echo
    done |
    map "$IDX/meta.db"
    ;;
esac
