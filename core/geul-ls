#!/usr/bin/env bash
# geul-ls -- retreive list of resources in the repository
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-03-15
set -e
. "$GEUL.sh"
. "$GEUL.this-runs-on-stage"

# prepare options
ListStaged=false
ListAllResources=false
PreserveSuffixes=true
ListOptions=()
while getopts "atrsS" o; do
    case $o in
        a) ListAllResources=true ;;
        t) ListOptions+=(-t) ;;
        r) ListOptions+=(-r) ;;
        s) ListStaged=true ;;
        S) PreserveSuffixes=false ;;
    esac
done
shift $(($OPTIND - 1))

## prepare query
if $ListAllResources; then
    Suffices=()
else
    # TODO move suffices to $GEUL_DIR/suffices
    Suffices=(.geul .xhtml .html .atom)
fi

if $ListStaged; then
    Root="$GEUL_STAGE"
else
    Root="$GEUL_DIR/resources"
    for s in "${Suffices[@]}"
    do Suffices+=("$s,v")
    done
fi

# path query
pathq=()
if [ $# -eq 0 ]; then
    set -- "."
fi
for Path; do
    Path=`readlink -f "$Path" || echo "$Path"`
    Path=${Path#$GEUL_STAGE}
    Path=${Path#/}
    Path=${Path%/}
    p="$Path"
    if [ -d "$p" ]; then
        p="${p%/}/"
    fi
    p="$p*"
    pathq+=(${pathq:+-o} -ipath "$p")
done
[ ${#pathq[@]} = 0 ] || pathq=(\( "${pathq[@]}" \))

# name query
nameq=()
for s in "${Suffices[@]}"
do nameq+=(${nameq:+-o} -name "*$s")
done
[ ${#nameq[@]} = 0 ] || nameq=(\( "${nameq[@]}" \))


## steps for processing output
# listing order
order() {
    xargs ls "${ListOptions[@]}"
}

remove_suffices() {
    local remove_suffices="s/(`tr ' ' '|' <<<"${Suffices[*]}" | sed 's/\./\\./g'`)$//;"
    sed -E "$remove_suffices"
}
remove_rcs_suffix() {
    sed -E "s:,v$::"
}

# TODO remove resources in $GEUL_DIR/ignore file

# pretty printing
polish() {
    remove_redundancies() {
        awk '!a[$0]++'
    }
    make_relative_to_stage() {
        sed -E "s:^$GEUL_STAGE/::"
    }
    make_relative_to_pwd() {
        # FIXME: use ../
        sed -E "s:^${GEUL_PATH:+$GEUL_PATH/}::"
    }
    local cmd
    cmd=(remove_redundancies)
    cmd+=(\| make_relative_to_stage)
    cmd+=(\| make_relative_to_pwd)
    if [ -t 1 ]; then
        cmd+=(\| column)
    fi
    eval "${cmd[@]}"
}

process() {
    local cmd
    cmd=(order)
    $PreserveSuffixes || cmd+=(\| remove_suffices)
    cmd+=(\| remove_rcs_suffix)
    cmd+=(\| polish)
    eval "${cmd[@]}"
}


## list
cd "$Root"
find * -type f "${pathq[@]}" "${nameq[@]}" |
process
