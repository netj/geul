#!/usr/bin/env bash
# geul-log -- retreive revision history of a resource
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-03-15
set -eu
. "$GEUL.sh"
. "$GEUL.running-inside-a-repo"

Path=$1; shift

if ! [ -e "$Path" ]; then
    error "$Path: No such resource"
    exit 2
fi

relpath=`geul-path-parse "$Path"`

# TODO indeed, this needs to be optimized for speed

if git tag &>/dev/null; then
    # fetch history from Git
    nrrevs=$((
    + `git log --pretty=format:1 --follow -- "$GEUL_ROOT/$relpath" | wc -w`
    + `hd <"$Path" | grep -c "^Revision-.*:" || true`
    ))
    # TODO sort these by date
    {
        # revision to the working tree
        if [ $nrrevs -eq 0 -o \
            -n "`git status --porcelain -- "$GEUL_ROOT/$relpath"`" ]; then
            echo Revision $(($nrrevs + 1))
            date -r "$GEUL_ROOT/$relpath" +"Date: %FT%T%:z"
            echo Status: draft
            echo
            echo
        fi
        # revisions from git
        git log --pretty=format:"Revision %nDate: %ai%nAuthor: %aN%n%n%s%n" \
            --follow -- "$GEUL_ROOT/$relpath" |
        sed '/Date:/ s/\([+-]\)\([0-9][0-9]\)\([0-9][0-9]\)/\1\2:\3/'
        # revisions recorded in header
        hd <"$Path" | awk '
        BEGIN {
            inRev=0
        }
        /^[^ ]+:/ {
            if (inRev) { print "" }
            inRev=0
        }
        /^Revision-.*:/ {
            sub(/^Revision-/, "")
            sub(/:.*$/, "")
            print "Revision " $0
            inRev=1
            next
        }
        inRev && /^  */ {
            sub(/^  */, "")
            print $0
            next
        }
        END {
            if (inRev) { print "" }
        }
        '
    } |
    awk '
    BEGIN {
        rev=0
    }

    /^Revision $/ {
        print $0 ('$nrrevs'-rev)
        rev++
        next
    }

    /^Date: [^ ]* [^ ]* [^ ]*/ {
        tz=$4
        # FIXME sanitize timezone part (+0900 -> +09:00, Z -> Z)
        print $1 " " $2 "T" $3 tz
        next
    }

    {
        print $0
    }
    '
else
    # fallback to filesystem information
    echo Revision 1
    date -r "$Path" +"Date: %FT%T%:z"
    echo
    echo
fi
