#!/usr/bin/env bash
# ls2atom -- transform list of articles into ATOM form
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-06-10
# See: http://tools.ietf.org/html/rfc4287
set -e
. "$GEUL.sh"

Id=$1; shift
Meta=${_GEUL_LOG:-}

GEUL_BASEURL=`cat "$GEUL_DIR/base-url"`

xml-escape() {
    x=$1
    x=${x//&/&amp;}
    x=${x//</&lt;}
    x=${x//>/&gt;}
    x=${x//\"/&quot;}
    echo -n "$x"
}

echo '<?xml version="1.0" encoding="utf-8"?>'
echo '<feed xmlns="http://www.w3.org/2005/Atom">'

(
eval "`
geul-index meta Title Summary <<<"$Id" | tail -n +2 |
parse-meta title
`"
# title
printf '<title type="text">%s</title>' "`xml-escape "$title"`"
echo
# TODO subtitle?
# TODO author+
# id
printf '<id>%s</id>' "`xml-escape "$GEUL_BASEURL$Id"`"
echo
# link+
printf '<link rel="self" href="%s"/>' "`xml-escape "$GEUL_BASEURL$Id.atom"`"
echo
printf '<link href="%s"/>' "`xml-escape "$GEUL_BASEURL${Id%index}"`"
echo
# TODO icon?
# TODO logo?
# TODO rights?
# updated
printf '<updated>%s</updated>' "`date +%FT%T%:z`"
echo
# TODO generator
echo
)

# entries
buffer=`mktemp /tmp/geul.ls2atom.XXXXXX`
trap "rm -f $buffer" EXIT
geul-index meta Title Created Summary |
{
    # TODO implement this in Perl to speed up
    # how to emit an ATOM entry
    generate-atom-entry() {
        eval "`parse-meta title created summary`"
        echo '<entry>'
        printf '<title type="text">%s</title>' "`xml-escape "$title"`"
        printf '<link href="%s"/>' "`xml-escape "$GEUL_BASEURL${id%index}"`"
        printf '<published>%s</published>' "`xml-escape "$created"`"
        printf '<id>%s</id>' "`xml-escape "$GEUL_BASEURL$id"`"
        # TODO translate more tags
        echo '<summary type="xhtml">'
        echo '<div xmlns="http://www.w3.org/1999/xhtml">'
        # TODO try to prevent xinclude recursions
        Markdown.pl <<<"$summary"
        echo '</div>'
        echo '</summary>'
        echo '</entry>'
    }
    while IFS= read -r line; do
        case "$line" in
            "") # empty line indicates the end of an entry
            generate-atom-entry <$buffer
            ;;
            ^*) # a new article, reset buffer
            id=$line; id=${id#^}; id=${id% }
            : >$buffer
            ;;
            *) # otherwise, append to buffer
            echo "$line" >>$buffer
            ;;
        esac
    done
}

echo "</feed>"
