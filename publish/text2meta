#!/usr/bin/env bash
# text2meta -- combine header and revision log into metadata in RFC 2822 form
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-06-10
set -e
. "$GEUL.sh"

Path=$1; shift
Text=$1; shift
Log=$1; shift

id=`geul-path-parse "$Path"`

{
echo "Id: $id"
cat "$Log" | hd |
    sed -e 's/^Revision /Revision: /' \
        -e 's/^Date:/Modified:/'
cat "$Log" | grep '^Date:' | tail -1 | sed 's/^Date:/Created:/'
hd <"$Text"
} |
perl -Mutf8 -Mstrict -e '
# TODO extract this to normalize-meta
    our %CanonicalName;
    sub alias { my $n = shift; $CanonicalName{$_} = $n foreach @_; }
    alias(qw(Title 제목));
    alias(qw(Author 누가 글쓴이 지은이));
    alias(qw(Created 만듬 언제 날짜));
    alias(qw(Modified 고침));
    alias(qw(Status 상태));
    sub normalize_head {
        my $hd = shift;
        my $hd2 = {};
        for my $n (keys %$hd) {
            my $n2 = lc $n;
            $n2 =~ s/\b./\U$&/g;
            $n2 = $CanonicalName{$n} if exists $CanonicalName{$n};
            $hd2->{$n2} = $hd->{$n};
        }
        $hd2
    }
    sub parse_head {
        my $fh = shift;
        my %hd;
        while (my $line = <$fh>) {
            utf8::decode($line);
            last if $line =~ /^\s*$/;
            chomp $line;
            if ($line =~ /^([^:]+)\s*:\s*(.*)$/) {
                $hd{$1} = $2;
            }
        }
        \%hd
    }

    my $hd = normalize_head(parse_head(\*STDIN));
    for my $n (keys %$hd) {
        my $line = "$n: $hd->{$n}\n";
        utf8::encode($line);
        print $line;
    }
'
