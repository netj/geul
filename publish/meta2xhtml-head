#!/usr/bin/env bash
# meta2xhtml-head -- transform metadata in RFC 2822 form into XHTML form
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2009-06-10
set -e
. "$GEUL.sh"

Path=$1; shift
Meta=$1; shift
Log=$1; shift

echo '<head xmlns="http://www.w3.org/1999/xhtml" xmlns:geul="http://netj.org/2009/geul">'

# include metadata
{
    echo "Generated: `timestamp`"
    cat "$Meta" 
} |
perl -Mstrict -Mutf8 -e '
sub escapeXML {
    # handle XML tokens
    my $text = shift;
    $text =~ s#&#&amp;#gs;
    $text =~ s#<#&lt;#gs;
    $text =~ s#>#&gt;#gs;
    utf8::decode($text);
    $text
}
sub p {
    my $s = shift;
    utf8::encode($s);
    print $s;
}

my $hd = {};
while (my $line = <>) {
    utf8::decode($line);
    last if $line =~ /^\s*$/;
    chomp $line;
    if ($line =~ /^([^:]+)\s*:\s*(.*)$/) {
        $hd->{$1} = $2;
    }
}
p(sprintf "<title>%s</title>\n", escapeXML($hd->{Title})); delete $hd->{Title};
# TODO make use of dc:date and etc.
for my $n (keys %$hd) { #(qw(Author Created Modified Generated Status Revision)) {
    next unless defined $hd->{$n};
    p(sprintf "<meta name=\"%s\" content=\"%s\"/>\n",
        escapeXML($n), escapeXML($hd->{$n}));
}
'

# include revision history
cat "$Log" | awk '
BEGIN {
    msg=0
    r=0
}
r && /^Revision / { msg=0; print "</geul:revision>" }
/^Revision / { r=$2; print "<geul:revision number=\"" r "\"" }
r && msg { gsub(/&/, "\\&amp;"); gsub(/</, "\\&lt;"); print }
r && !msg && /^Date: / { print " date=\"" $2 "\"" }
r && !msg && /^$/ { msg=1; printf ">" }
END {
if (r) { print "</geul:revision>" }
}
'

echo '</head>'
